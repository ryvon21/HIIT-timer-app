{"version":3,"sources":["assets/images/pause.svg","assets/images/play.svg","assets/images/running.svg","assets/images/minus.svg","assets/images/plus.svg","assets/images/return.svg","pausebtn.js","playbtn.js","wrkout.js","conditions.js","timerMain.js","minusbtn.js","plusbtn.js","returnbtn.js","newwrkout.js","completion.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","PauseBtn","props","react_default","a","createElement","src","PauseSVG","alt","PlayBtn","PlaySVG","NewExercise","Object","assign","className","RunSVG","WrkoutConditions","react","createContext","Timer","wkroutInfo","useContext","_useState","useState","_useState2","slicedToArray","isPaused","setPause","_useState3","_useState4","mode","setMode","_useState5","_useState6","secondsRemaining","setSecondsRemaining","secondsRemainingRef","useRef","isPausedRef","modeRef","_useState7","_useState8","sets","newSetsRemaining","setsRef","useEffect","changeMode","newMode","current","newTime","repSeconds","restSeconds","console","log","counter","countdown","setInterval","clearInterval","timeLeft","setShowVictory","index_esm","value","maxValue","text","concat","styles","buildStyles","textColor","pathColor","trailColor","style","marginTop","playbtn","onClick","pausebtn","wrkout","setShowWorkout","SubtractBtn","SubtractSVG","PlusBtn","PlusSVG","ReturnBtn","ReturnSVG","CreateNewWrkout","textAlign","ReactSlider","thumbClassName","trackClassName","onChange","newValue","setRepSeconds","min","max","setRestSeconds","plusbtn","addCounter","minusbtn","subtractCounter","returnbtn","ShowVictory","react_confetti_min_default","width","window","innerWidth","height","innerHeight","App","showWorkout","showVictory","_useState9","_useState10","setCounter","conditions","Provider","newwrkout","completion","timerMain","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6b8c89d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pause.02daf408.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.ec5b9f2c.svg\";","module.exports = __webpack_public_path__ + \"static/media/running.dd908935.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus.9e5f2ec2.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.d24bf68f.svg\";","module.exports = __webpack_public_path__ + \"static/media/return.581bc80a.svg\";","import PauseSVG from './assets/images/pause.svg'\r\nimport React, { Component }  from 'react';\r\n\r\nfunction PauseBtn(props) {\r\n    return (\r\n        <button {...props}>\r\n            <img src={PauseSVG} alt=\"pause button\" />\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default PauseBtn;","import PlaySVG from './assets/images/play.svg'\r\nimport React, { Component }  from 'react';\r\n\r\nfunction PlayBtn(props) {\r\n    return (\r\n        <button {...props}>\r\n            <img src={PlaySVG} alt=\"play button\" />\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default PlayBtn;","import RunSVG from './assets/images/running.svg'\r\nimport React, { Component }  from 'react';\r\n\r\nfunction NewExercise(props) {\r\n    return (\r\n        <button {...props} className=\"wide-btn\">\r\n            <img src={RunSVG} alt=\"running shoe icon\" />\r\n            New Exercise\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default NewExercise;","import react from 'react';\r\n\r\nconst WrkoutConditions = react.createContext({}); \r\n\r\nexport default WrkoutConditions;","import { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\r\nimport React, { Component }  from 'react';\r\nimport { useContext, useState, useEffect, useRef } from 'react';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport PauseBtn from './pausebtn';\r\nimport PlayBtn from './playbtn';\r\nimport NewExercise from './wrkout';\r\nimport WrkoutConditions from './conditions';\r\n\r\n\r\nfunction Timer () {\r\n    const wkroutInfo = useContext(WrkoutConditions);\r\n    const [isPaused, setPause] = useState(false);\r\n    const [mode, setMode] = useState('rep')\r\n    const [secondsRemaining, setSecondsRemaining] = useState(0)\r\n    const secondsRemainingRef = useRef(secondsRemaining)\r\n    const isPausedRef = useRef(isPaused)\r\n    const modeRef = useRef(mode)\r\n\r\n    const [sets, newSetsRemaining] = useState(0)\r\n    const setsRef = useRef(sets)\r\n\r\n    const red = '#B9272C'\r\n    const green = '#03B55C'\r\n\r\n    function tick() {\r\n        secondsRemainingRef.current = secondsRemainingRef.current -1\r\n        setSecondsRemaining(secondsRemainingRef.current)\r\n    }\r\n\r\n    function reduceSets() {\r\n        setsRef.current = setsRef.current -1;\r\n        newSetsRemaining(setsRef.current);\r\n        console.log(setsRef.current)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        function changeMode() {\r\n            \r\n\r\n            const newMode = modeRef.current === 'rep' ? 'rest' : 'rep'\r\n            const newTime = (newMode === 'rep' ? wkroutInfo.repSeconds : wkroutInfo.restSeconds)\r\n\r\n            setMode(newMode)\r\n            modeRef.current = newMode\r\n\r\n            setSecondsRemaining(newTime)\r\n            secondsRemainingRef.current = newTime\r\n\r\n            reduceSets();\r\n        }\r\n    \r\n    setsRef.current = wkroutInfo.counter\r\n    newSetsRemaining(setsRef.current)\r\n    secondsRemainingRef.current = wkroutInfo.repSeconds\r\n    setSecondsRemaining(secondsRemainingRef.current)\r\n    \r\n\r\n    const countdown = setInterval(() => {\r\n        if(isPausedRef.current || setsRef.current < 0) {\r\n            return;\r\n        }\r\n        if (secondsRemainingRef.current === 0) {\r\n            return changeMode();\r\n        }\r\n        \r\n        tick();\r\n    }, 1000)\r\n\r\n    \r\n\r\n    return () => clearInterval(countdown)\r\n    \r\n    \r\n\r\n    }, [wkroutInfo]);\r\n\r\n    const timeLeft = secondsRemaining\r\n\r\n    if (sets < 0) {\r\n        wkroutInfo.setShowVictory(true)\r\n    }\r\n\r\n   \r\n\r\n    return (\r\n        \r\n        <div>\r\n        <CircularProgressbar \r\n        value={timeLeft}\r\n        maxValue={60}\r\n        text={`${timeLeft}`} \r\n        styles={buildStyles({\r\n        textColor:'whitesmoke',\r\n        pathColor:mode === 'rep' ? red : green,\r\n        trailColor:'#FDFFF7',  \r\n        })} />\r\n\r\n        <div style={{marginTop:'25px'}}>\r\n            <PlayBtn  onClick={() => { setPause(false); isPausedRef.current = false; }}/>\r\n            <PauseBtn onClick={() => { setPause(true); isPausedRef.current = true; }}/>\r\n        </div>\r\n\r\n        <div style={{marginTop:'25px'}}>\r\n            <NewExercise onClick= {() => wkroutInfo.setShowWorkout(true)}/>\r\n        </div>\r\n\r\n\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default Timer;","import SubtractSVG from './assets/images/minus.svg'\r\nimport React, { Component }  from 'react';\r\n\r\nfunction SubtractBtn(props) {\r\n    return (\r\n        <button {...props}>\r\n            <img src={SubtractSVG} alt=\"decrement icon\" />\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default SubtractBtn;","import PlusSVG from './assets/images/plus.svg'\r\nimport React, { Component }  from 'react';\r\n\r\nfunction PlusBtn(props) {\r\n    return (\r\n        <button {...props}>\r\n            <img src={PlusSVG} alt=\"increment icon\" />\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default PlusBtn;","import ReturnSVG from './assets/images/return.svg'\r\nimport React, { Component }  from 'react';\r\n\r\nfunction ReturnBtn(props) {\r\n    return (\r\n        <button {...props} className=\"return-btn\">\r\n            <img src={ReturnSVG} alt=\"return button\" />\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default ReturnBtn;","import React, { Component }  from 'react';\r\nimport { useContext } from \"react\";\r\nimport ReactSlider from \"react-slider\";\r\nimport './App.css'\r\nimport WrkoutConditions from \"./conditions\";\r\nimport SubtractBtn from \"./minusbtn\";\r\nimport PlusBtn from \"./plusbtn\";\r\nimport ReturnBtn from \"./returnbtn\";\r\n\r\nfunction CreateNewWrkout(){\r\n    const wkroutInfo = useContext(WrkoutConditions)\r\n    return (\r\n        <main>\r\n            <h1>Start new workout</h1>\r\n\r\n            <div style={{textAlign:'left'}}>\r\n                <label>Rep Interval: {wkroutInfo.repSeconds}</label>\r\n                <ReactSlider\r\n                    className={'slider'}\r\n                    thumbClassName={'thumb'}\r\n                    trackClassName={'track'}\r\n                    value={wkroutInfo.repSeconds}\r\n                    onChange={newValue => wkroutInfo.setRepSeconds(newValue)}\r\n                    min={1}\r\n                    max={60}\r\n                 />\r\n                <label>Rest Interval: {wkroutInfo.restSeconds}</label>\r\n                <ReactSlider\r\n                    className={'slider2'}\r\n                    thumbClassName={'thumb2'}\r\n                    trackClassName={'track2'}\r\n                    value={wkroutInfo.restSeconds}\r\n                    onChange={newValue => wkroutInfo.setRestSeconds(newValue)}\r\n                    min={1}\r\n                    max={60}\r\n                 />\r\n            </div>\r\n\r\n            <label style={{textAlign:'left'}}> Number of sets: </label>\r\n\r\n            <div className='count-container'>\r\n                <PlusBtn onClick={ () => wkroutInfo.addCounter()} />\r\n\r\n                <p> { wkroutInfo.counter } </p>\r\n\r\n                <SubtractBtn onClick={ () => wkroutInfo.subtractCounter()}/>\r\n            </div>\r\n\r\n            <ReturnBtn onClick={ () => wkroutInfo.setShowWorkout(false)}/>\r\n\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default CreateNewWrkout;","import { useContext } from \"react\";\r\nimport React, { Component }  from 'react';\r\nimport './App.css'\r\nimport WrkoutConditions from \"./conditions\";\r\nimport ReturnBtn from \"./returnbtn\";\r\nimport Confetti from 'react-confetti';\r\n\r\n\r\n\r\nfunction ShowVictory(){\r\n    const wkroutInfo = useContext(WrkoutConditions)\r\n    return (\r\n        <main style={{textAlign:'center'}}>\r\n             <Confetti\r\n                width={window.innerWidth}\r\n                height={window.innerHeight}\r\n             />\r\n\r\n            <h1>Victory!</h1>\r\n\r\n            <ReturnBtn onClick={ () => wkroutInfo.setShowVictory(false)}/>\r\n\r\n        </main>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default ShowVictory;","import './App.css';\nimport React, { Component }  from 'react';\nimport {useState} from \"react\";\nimport Timer from \"./timerMain\";\nimport CreateNewWrkout from './newwrkout';\nimport WrkoutConditions from './conditions';\nimport ShowVictory from './completion';\n\nfunction App() {\n  const [showWorkout, setShowWorkout] = useState(false)\n  const [showVictory, setShowVictory] = useState(false)\n  const [repSeconds, setRepSeconds] = useState(30)\n  const [restSeconds, setRestSeconds] = useState(20)\n  const [counter, setCounter] = useState(1)\n  const addCounter = () => setCounter(counter + 1)\n  let subtractCounter = () => setCounter(counter - 1)\n  \n\n  return (\n    <main>\n      <WrkoutConditions.Provider value={{\n        showWorkout,\n        setShowWorkout,\n        showVictory,\n        setShowVictory,\n        repSeconds,\n        restSeconds,\n        setRepSeconds,\n        setRestSeconds,\n        counter,\n        addCounter,\n        subtractCounter,\n      }}>\n      {showWorkout ? <CreateNewWrkout /> : showVictory? <ShowVictory/> : <Timer />}\n      </WrkoutConditions.Provider>\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  //<React.StrictMode>\n    <App />,\n  //</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}